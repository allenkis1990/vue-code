<template>
  <div style="height:100%;">
    <drawer
      width="180px;"
      :show.sync="$store.state.drawerVisibility"
      :show-mode="showModeValue"
      :placement="showPlacementValue"
      :drawer-style="{'background-color':'#38373d', width: '180px'}">
      <div slot="drawer">
        <div class="hb-popover">
          <div class="popover-bd">
            <div class="user-img-box">
              <img class="user-img" :src="imgUserHeader" @click="gotoPage('/demo/mine')">
              <a href="javascript:;" class="weui-btn weui-btn_mini weui-btn_default hd-btn"
                 v-if="!$store.getters.hasLogin" @click="loginEvent">登 录</a>
            </div>
            <div class="hb-menu-box">
              <a href="javascript:void(0);" :class="[itemStyle('/demo/home')]" @click="gotoPage('/demo/home')">
                <span class="hb-ico ico-found"></span>发现培训
              </a>
              <a href="javascript:void(0);" :class="[itemStyle('/demo/ShoppingCart')]"
                 @click="gotoPage('/demo/ShoppingCart')">
                <span class="hb-ico ico-car"></span>购物车
              </a>
              <a href="javascript:void(0);"  :class="[itemStyle('/demo/orderList')]"
                 @click="gotoPage('/demo/orderList')">
                <span class="hb-ico ico-list"></span>报名清单
              </a>
              <a href="javascript:void(0);" class="menu-items" @click="() => {this.showCode = true}"
                >
                <span class="hb-ico ico-class"></span>我的学习
              </a>
              <a href="javascript:void(0);" class="menu-items" @click="() => {this.showCode = true}"
                >
                <span class="hb-ico ico-prove"></span>学习档案
              </a>
              <a href="javascript:void(0);" class="menu-items"
                >
                <span class="hb-ico ico-app"></span>APP学习
              </a>
              <a href="javascript:void(0);" class="menu-items"
                @click="exitAppEvent()">
                <span class="hb-ico ico-exit"></span>退出登录
              </a>
            </div>
          </div>
        </div>
      </div>
      <router-view class="router-view"></router-view>

    </drawer>
    <!-- 二维码弹窗 -->
    <div class="js_dialog" id="iosDialog1" style="opacity: 1;" v-if="showCode">
      <div class="weui-mask"></div>
      <div class="weui-dialog weui-dialog-1">
        <div class="weui-dialog__bd weui-dialog__bd-1">
          <p>请 <span class="cb b">长按保存</span> 小程序二维码，扫码，进入学习。或者进入小程序搜索“<span class="cb b">福建华博课程超市+</span>”</p>
          <img class="xcq-img mt40" src="../../design/images/xcx.jpg" />
          <a class="btn-close" @click="() => {this.showCode = false}">
            <img src="../../design/images/icon-close.png"/>
          </a>
        </div>
      </div>
    </div>
  </div>
</template>

<style lang="less">
  @import "../../design/styles/webstyle.less";
</style>

<script>
  import * as storeTypes from '../store/types'
  //  import AppUtil from '../common/util/AppUtil'
  import {
    Group,
    Cell,
    Drawer
  } from 'vux'
  import AppConstant from '../global/constants/AppConstant'

  export default {
    data () {
      return {
        showCode: false,
        showMenu: false,
        showMode: 'push',
        showModeValue: 'push',
        showPlacement: 'left',
        showPlacementValue: 'left',
        ringhtOptionShowMore: false,
        direction: this.$store.state.direction,
//        imgUserHeader: this.$store.state.accountModule.userInfo.displayPhotoUrl === undefined ? this.$store.state.accountModule.userInfo.displayPhotoUrl : require('../../design/images/default-user-img.jpg'),
        userInfo: this.$store.state.accountModule.userInfo,
        bottomNavList: [
          {name: '我的学习', ico: require('../../design/images/tabbar-learning.png'), currentIco: require('../../design/images/tabbar-learning-current.png'), path: '/refundLog'},
          {name: '发现培训', ico: require('../../design/images/tabbar-find.png'), currentIco: require('../../design/images/tabbar-find-current.png'), path: '/demo/home'},
          {name: '购物车', ico: require('../../design/images/tabbar-cart.png'), currentIco: require('../../design/images/tabbar-cart-current.png'), path: '/demo/shoppingCart'},
          {name: '学习档案', ico: require('../../design/images/tabbar-archives.png'), currentIco: require('../../design/images/tabbar-archives-current.png'), path: ''},
          {name: '我的', ico: require('../../design/images/tabbar-mine.png'), currentIco: require('../../design/images/tabbar-mine-current.png'), path: ''}]
      }
    },
    computed: {
      imgUserHeader () {
        let user = this.$store.getters.userInfo
        if (user && user.displayPhotoUrl) {
          if (user.displayPhotoUrl.trim() !== '') {
            return user.displayPhotoUrl
          }
        }
        return require('../../design/images/default-user-img.jpg')
      }
    },
    components: {
      Group,
      Cell,
      Drawer
    },
    methods: {
      /**
       * 侧滑隐藏事件
       */
      drawerVisibilityEvent () {
        this.$store.commit(storeTypes.GLOBAL_SET_DRAWER, false)
      },
      /**
       * 菜单点击跳转事件
       * @param path
       */
      gotoPage (path) {
        this.drawerVisibilityEvent()
        this.$router.push(path)
      },
      /**
       * 登录事件
       */
      loginEvent () {
        this.push('/loginByPassword')
      },
      /**
       * 退出事件
       */
      exitAppEvent () {
        this.$store.dispatch(storeTypes.ACCIYBT_EXIT, '').then(data => {
          if (data.head.code === storeTypes.NETWORK_RESULT_SUCCESS) {
            this.removeCookie(AppConstant.cookie.beforeLoginUrl)
            this.drawerVisibilityEvent()
            this.replace('/loginByPassword')
          }
        }).catch(e => {
          console.log(e)
        })
      },
      itemStyle (path) {
        if (this.$route.path === path) {
          return ['menu-items', 'current']
        } else {
          return ['menu-items']
        }
      },
      openApp () {
        // 此方法后续需要放到util模块中
//        AppUtil.openApp()
        this.toast('程序猿挖矿中...')
      }
    }
  }
</script>

