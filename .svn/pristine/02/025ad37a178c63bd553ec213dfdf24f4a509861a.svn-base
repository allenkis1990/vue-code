<template>
  <div class="weui-panel hb-panel-1" @click="cellClickAction">
    <div :class="getTopBarClass()">
      <p>{{item.createTime}}</p>
      <p class="tr-2">订单号：{{item.orderNo}}</p>
    </div>
    <!-- 班级订单 -->
    <!--v-if="item.orderGenerateType == '1'"-->
    <order-list-sub-cell  :subItem="item.subOrderList[0]" :channel="item.channel" @on-subSeeRefund="seeRefundAction(subItem)"  @on-subChangeClassRecord="changeClassRecordAction(subItem)" ></order-list-sub-cell>
    <!-- 发票订单 -->
<!--
    <order-list-sub-invoice-cell v-if="item.orderGenerateType == '3'" :subItem="item.subOrderList[0]"></order-list-sub-invoice-cell>
-->
    <div class="weui-panel__ft">
      <p>订单状态：<span class="cr">{{getOrderStatusText()}}</span></p>
      <p class="tr" v-if="!item.hasAssociatedOrder && item.subOrderList.length <= 1 && item.channel !== 'PRESENT' && item.channel !== 'COLLECTIVE'">{{getTotalPriceText()}}<span class="ml10 cr num">¥ {{item.totalAmount}}</span></p>
    </div>
    <div class="weui-panel__op bor-t" v-if="isShowBottomBar()" style="padding-top:0;padding-bottom:0">
      <!-- <a href="javascript:;" class="hb-btn-s-order hb-btn-r" @click="buttonAction('completeDistributionInfo', $event)" v-if="isShowcompleteDistributionInfoButtton()">完善配送</a> -->
<!--
      <a href="javascript:;" class="hb-btn-s-order" @click="buttonAction('changeClassRecord', $event)" v-if="isShowRelevanceOrder()">关联订单</a>
-->
      <a href="javascript:;" class="hb-btn-s-order" @click="buttonAction('cancelOrder', $event)" v-if="isShowCancelOrderButton() && item.channel !== 'COLLECTIVE' && item.channel !== 'PRESENT'">取消订单</a>
      <a href="javascript:;" class="hb-btn-s-order current"  @click="buttonAction('goToPay', $event)" v-if="isShowGoToPayButton() && item.channel !== 'COLLECTIVE' && item.channel !== 'PRESENT'">立即支付</a>
<!--
      <a href="javascript:;" class="hb-btn-s-order" @click="buttonAction('seeRefund', $event)"  v-if="isShowSeeRefundButtton()">查看退款</a>
-->
      <!-- V1.0.0修复版本隐藏 -->
      <!-- <a href="javascript:;" class="hb-btn-s-order" @click="buttonAction('changeClassRecord', $event)" v-if="isShowChangeClassRecordButton()">换班记录</a> -->
    </div>
  </div>
</template>
<style lang="less">
  @import "~vux/src/styles/weui/widget/weui_tips/weui-loadmore.less";
  @import "../../../design/styles/webstyle.less";
  .hb-btn-s-order{
    width: 75px;
    height: 30px;
    line-height: 2.5;
    text-align: center;
    border: 1px solid #ddd;
    -webkit-border-radius: 30px;
    -moz-border-radius: 30px;
    border-radius: 30px;
    display: inline-block;
    color: #666;
    font-size: 13px;
    margin-top: 7px;
    margin-bottom: 7px;
   &.current{
     border-color: @theme-color;
     background-color: @theme-color;
     color: #fff;
   }
  }
</style>
<script>
  import OrderListSubCell from './OrderListSubCell.vue'
  import OrderListSubInvoiceCell from './OrderListSubInvoiceCell.vue'
  export default {
    components: {OrderListSubCell, OrderListSubInvoiceCell},
    props: {
      item: {
        type: Object,
        require: false,
        default: function () {
          return {
            status: 1,
            orderNo: '',
            deleiverInfoComplete: true,
            createTime: '',
            totalAmount: '0',
            paidMoney: '',
            businessType: 'NORMAL',
            paymentChannel: 1,
            subOrderList: [
              {
                subOrderNo: '',
                subOrderStatus: 1,
                skuId: '',
                skuIdName: '',
                photoPath: '',
                trainingPeriod: 0,
                totalAmount: 0,
                skuPropertyNameList: [
                  {
                    skuPropertyId: '',
                    skuPropertyName: '科目',
                    skuPropertyValueId: '',
                    skuPropertyValueName: ''
                  },
                  {
                    skuPropertyId: '',
                    skuPropertyName: '专业',
                    skuPropertyValueId: '',
                    skuPropertyValueName: ''
                  },
                  {
                    skuPropertyId: '',
                    skuPropertyName: '继续教育年度',
                    skuPropertyValueId: '',
                    skuPropertyValueName: ''
                  }
                ]
              }
            ]
          }
        }
      }
    },
    data () {
      return {}
    },
    methods: {
      getTotalPriceText () {
        if (this.item.status === 1 || this.item.status === 2 || this.item.status === 7 || this.item.status === 8) {
          return '总价'
        } else {
          return '实付'
        }
      },
      getOrderStatusText () {
        switch (this.item.status) {
          case 1: {
            return '未支付'
          }
          case 2: {
            return '未支付'
          }
          case 3: {
            return '开通中'
          }
          case 4: {
            return '开通中'
          }
          case 5: {
            return '开通中'
          }
          case 6: {
            return '交易成功'
          }
          case 7: {
            return '交易关闭'
          }
          case 8: {
            return '支付中'
          }
        }
      },
      seeRefundAction (subItem) {
        // 退款记录 主订单的id
        this.$emit('on-seeRefund', this.item)
      },
      changeClassRecordAction (subItem) {
        // 换班记录 子订单的id
        this.$emit('on-changeClassRecord', subItem)
      },
      getTopBarClass () {
        // if (!this.item.deleiverInfoComplete && (this.item.status === 3 || this.item.status === 4 || this.item.status === 5 || this.item.status === 6)) {
        //   return ['weui-panel__hd', 'undo']
        // } else {
        //   return ['weui-panel__hd']
        // }
        return ['weui-panel__hd']
      },
      buttonAction (type, event) {
        if (event) {
          event.stopPropagation()
        }
        switch (type) {
          // 立即支付
          case 'goToPay' : {
            this.$emit('on-goToPay', this.item)
            break
          }
          // 完善配送信息
          case 'completeDistributionInfo' : {
            this.$emit('on-completeDistributionInfo', this.item)
            break
          }
          // 关联订单
          case 'relevanceOrder' : {
            this.$emit('on-relevanceOrder', this.item)
            break
          }
          // 取消订单
          case 'cancelOrder' : {
            this.$emit('on-cancelOrder', this.item)
            break
          }
          // 比较特殊，只有在子订单数为一的时候会调用此方法，故应该考虑传的是哪一个订单号
          // 查看换班记录
          case 'changeClassRecord' : {
            if (this.item.subOrderList.length === 1) {
              this.$emit('on-changeClassRecord', this.item.subOrderList[0])
            }
            break
          }
          // 查看退款
          case 'seeRefund' : {
            if (this.item.subOrderList.length === 1) {
              this.$emit('on-seeRefund', this.item)
            }
            break
          }
        }
      },
      cellClickAction () {
        this.$emit('on-cellClick', this.item)
      },
      /**
       * 判断是否显示控件方法
       */
      isShowBottomBar () {
        // 除交易关闭的情况下不显示，其余情况都显示
        if (this.item.status === 7) {
          return false
        } else {
          return true
        }
      },
      // 在订单状态为支付中和未支付的情况下，显示取消订单和立即支付按钮
      isShowCancelOrderButton () {
        if (this.item.status === 1 || this.item.status === 2 || this.item.status === 8) {
          return true
        } else {
          return false
        }
      },
      isShowGoToPayButton () {
        if (this.item.status === 1 || this.item.status === 2 || this.item.status === 8) {
          return true
        } else {
          return false
        }
      },
      // 在订单状态为开通中和交易成功的情况下，并且收货地址未完善的情况下，显示该按钮
      isShowcompleteDistributionInfoButtton () {
        if ((this.item.status === 4 || this.item.status === 5 || this.item.status === 6) && !this.item.deleiverInfoComplete) {
          return true
        } else {
          return false
        }
      },
      // 本应该在子订单上进行显示，但有此状态的主订单只可能有一个子订单，故直接在主cell上进行显示
      // 因此只有在订单状态为SWAP_PART或者SWAP_COMPLETE时进行显示
      isShowRelevanceOrder () {
        // let subItem = this.item.subOrderList[0]    (判断条件) && subItem.swapOut === false
        if ((this.item.businessType === 'SWAP_PART' || this.item.businessType === 'SWAP_COMPLETE')) {
          return true
        } else {
          return false
        }
      },
      // 本应该在子订单中显示，只有在子订单个数为1的情况下，将查看退款和换班记录移到主订单的cell中进行显示
      // 显示查看退款按钮，当子订单状态为退货中的时候，显示该按钮
      isShowSeeRefundButtton () {
        if (this.item.subOrderList.length === 1) {
          let subItem = this.item.subOrderList[0]
          if (subItem.subOrderStatus === 7) {
            return true
          } else {
            return false
          }
        } else {
          return false
        }
      },
      // 显示换班记录,当子订单状态为退货中的时候，显示该按钮
      isShowChangeClassRecordButton () {
        if (this.item.subOrderList.length === 1) {
          let subItem = this.item.subOrderList[0]
          if (this.item.businessType === 'NORMAL' && subItem.swapOut) {
            return true
          } else {
            return false
          }
        } else {
          return false
        }
      }
    }
  }
</script>

